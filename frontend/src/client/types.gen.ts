// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_access_token_api_v1_login_access_token_post = {
	grant_type?: string | null;
	username: string;
	password: string;
	scope?: string;
	client_id?: string | null;
	client_secret?: string | null;
};

export type ConfigIn = {
	email_from?: string | null;
	email_cc?: string | null;
	email_to?: string | null;
	alert_email_title?: string | null;
	recovery_email_title?: string | null;
	alert_email_body?: string | null;
	recovery_email_body?: string | null;
	slack_link?: string | null;
	teams_link?: string | null;
};

export type ConfigOut = {
	email_from?: string | null;
	email_cc?: string | null;
	email_to?: string | null;
	alert_email_title?: string | null;
	recovery_email_title?: string | null;
	alert_email_body?: string | null;
	recovery_email_body?: string | null;
	slack_link?: string | null;
	teams_link?: string | null;
	id: number;
};

export type HTTPValidationError = {
	detail?: Array<ValidationError>;
};

export type Message = {
	message: string;
};

export type NewPassword = {
	token: string;
	new_password: string;
};

export type QRUri = {
	uri: string;
};

export type ServiceCreate = {
	name: string;
	sub_name: string;
};

export type ServicePublic = {
	name: string;
	sub_name: string;
	id: number;
};

export type ServicesPublic = {
	data: Array<ServicePublic>;
	count: number;
};

export type TOTPToken = {
	token: string;
};

export type UpdatePassword = {
	current_password: string;
	new_password: string;
};

export type UserPublic = {
	username: string;
	email: string;
	is_superuser?: boolean;
	can_edit?: boolean;
	is_active?: boolean;
	is_totp_enabled?: boolean;
	id: number;
};

export type UserRegister = {
	username: string;
	email: string;
	is_superuser?: boolean;
	can_edit?: boolean;
	is_active?: boolean;
	is_totp_enabled?: boolean;
};

export type UsersPublic = {
	data: Array<UserPublic>;
	count: number;
};

export type UserUpdate = {
	username: string;
	is_superuser?: boolean;
	can_edit?: boolean;
	is_active?: boolean;
};

export type UserUpdateServices = {
	added_services?: Array<number>;
};

export type ValidationError = {
	loc: Array<string | number>;
	msg: string;
	type: string;
};

export type LoginAccessTokenApiV1LoginAccessTokenPostData = {
	formData: Body_login_access_token_api_v1_login_access_token_post;
};

export type LoginAccessTokenApiV1LoginAccessTokenPostResponse = unknown;

export type VerifyTotpApiV1LoginValidateTotpPostData = {
	requestBody: TOTPToken;
};

export type VerifyTotpApiV1LoginValidateTotpPostResponse = unknown;

export type RefreshAccessTokenApiV1LoginRefreshTokenPostData = {
	refreshToken?: string | null;
};

export type RefreshAccessTokenApiV1LoginRefreshTokenPostResponse = unknown;

export type RecoverPasswordApiV1PasswordRecoveryEmailPostData = {
	email: string;
};

export type RecoverPasswordApiV1PasswordRecoveryEmailPostResponse = Message;

export type ResetPasswordApiV1ResetPasswordPostData = {
	requestBody: NewPassword;
};

export type ResetPasswordApiV1ResetPasswordPostResponse = Message;

export type SetUpPasswordApiV1SetupPasswordPostData = {
	requestBody: NewPassword;
};

export type SetUpPasswordApiV1SetupPasswordPostResponse = Message;

export type GetServicesApiV1ServicesGetData = {
	expectTotp?: boolean;
	limit?: number;
	skip?: number;
};

export type GetServicesApiV1ServicesGetResponse = ServicesPublic;

export type CreateServiceApiV1ServicesPostData = {
	expectTotp?: boolean;
	requestBody: ServiceCreate;
};

export type CreateServiceApiV1ServicesPostResponse = Message;

export type GetServiceApiV1ServicesServiceIdGetData = {
	expectTotp?: boolean;
	serviceId: number;
};

export type GetServiceApiV1ServicesServiceIdGetResponse = ServicePublic;

export type DeleteServiceApiV1ServicesServiceIdDeleteData = {
	expectTotp?: boolean;
	serviceId: number;
};

export type DeleteServiceApiV1ServicesServiceIdDeleteResponse = Message;

export type GetServiceUsersApiV1ServicesServiceIdUsersGetData = {
	expectTotp?: boolean;
	serviceId: number;
};

export type GetServiceUsersApiV1ServicesServiceIdUsersGetResponse =
	Array<UserPublic>;

export type GetServiceConfigApiV1ServicesServiceIdConfigGetData = {
	expectTotp?: boolean;
	serviceId: number;
};

export type GetServiceConfigApiV1ServicesServiceIdConfigGetResponse = ConfigOut;

export type UpdateServiceConfigApiV1ServicesServiceIdConfigPatchData = {
	expectTotp?: boolean;
	requestBody: ConfigIn;
	serviceId: number;
};

export type UpdateServiceConfigApiV1ServicesServiceIdConfigPatchResponse =
	Message;

export type EnableTotpApiV1TotpEnablePostData = {
	expectTotp?: boolean;
};

export type EnableTotpApiV1TotpEnablePostResponse = QRUri;

export type TotpLoginVerifyApiV1TotpVerifyPostData = {
	expectTotp?: boolean;
	requestBody: TOTPToken;
};

export type TotpLoginVerifyApiV1TotpVerifyPostResponse = Message;

export type DisableTotpApiV1TotpDisableDeleteData = {
	expectTotp?: boolean;
};

export type DisableTotpApiV1TotpDisableDeleteResponse = Message;

export type AdminDisableTotpApiV1TotpDisableUserIdPostData = {
	expectTotp?: boolean;
	userId: number;
};

export type AdminDisableTotpApiV1TotpDisableUserIdPostResponse = Message;

export type ReadUsersApiV1UsersGetData = {
	expectTotp?: boolean;
	limit?: number;
	skip?: number;
};

export type ReadUsersApiV1UsersGetResponse = UsersPublic;

export type ReadUserMeApiV1UsersMeGetData = {
	expectTotp?: boolean;
};

export type ReadUserMeApiV1UsersMeGetResponse = UserPublic;

export type ReadUserByIdApiV1UsersUserIdGetData = {
	expectTotp?: boolean;
	userId: number;
};

export type ReadUserByIdApiV1UsersUserIdGetResponse = UserPublic;

export type UpdateUserApiV1UsersUserIdPatchData = {
	expectTotp?: boolean;
	requestBody: UserUpdate;
	userId: number;
};

export type UpdateUserApiV1UsersUserIdPatchResponse = UserPublic;

export type DeleteUserApiV1UsersUserIdDeleteData = {
	expectTotp?: boolean;
	userId: number;
};

export type DeleteUserApiV1UsersUserIdDeleteResponse = Message;

export type RegisterUserApiV1UsersAdduserPostData = {
	expectTotp?: boolean;
	requestBody: UserRegister;
};

export type RegisterUserApiV1UsersAdduserPostResponse = Message;

export type UpdatePasswordMeApiV1UsersMePasswordPatchData = {
	expectTotp?: boolean;
	requestBody: UpdatePassword;
};

export type UpdatePasswordMeApiV1UsersMePasswordPatchResponse = Message;

export type GetUserServicesApiV1UsersUserIdServicesGetData = {
	expectTotp?: boolean;
	userId: number;
};

export type GetUserServicesApiV1UsersUserIdServicesGetResponse =
	Array<ServicePublic>;

export type AddServicesToUserApiV1UsersUserIdServicesPatchData = {
	expectTotp?: boolean;
	requestBody: UserUpdateServices;
	userId: number;
};

export type AddServicesToUserApiV1UsersUserIdServicesPatchResponse = Message;

export type TestEmailApiV1UtilsTestEmailPostData = {
	emailTo: string;
	expectTotp?: boolean;
};

export type TestEmailApiV1UtilsTestEmailPostResponse = Message;

export type HealthCheckApiV1UtilsHealthCheckGetResponse = boolean;
