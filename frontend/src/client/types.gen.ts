// This file is auto-generated by @hey-api/openapi-ts

export type AlertConfigCreate = {
	mail_from?: string | null;
	mail_cc?: string | null;
	mail_to?: string | null;
	alert_mail_title?: string | null;
	alert_mail_body?: string | null;
	recovery_mail_title?: string | null;
	recovery_mail_body?: string | null;
	extra_mail_to?: string | null;
	extra_mail_body?: string | null;
	slack_link?: string | null;
	teams_link?: string | null;
};

export type AlertConfigPublic = {
	mail_from?: string | null;
	mail_cc?: string | null;
	mail_to?: string | null;
	alert_mail_title?: string | null;
	alert_mail_body?: string | null;
	recovery_mail_title?: string | null;
	recovery_mail_body?: string | null;
	extra_mail_to?: string | null;
	extra_mail_body?: string | null;
	slack_link?: string | null;
	teams_link?: string | null;
};

export type Body_login___login_access_token = {
	grant_type?: string | null;
	username: string;
	password: string;
	scope?: string;
	client_id?: string | null;
	client_secret?: string | null;
};

export type HTTPValidationError = {
	detail?: Array<ValidationError>;
};

export type Message = {
	message: string;
};

export type NewPassword = {
	token: string;
	new_password: string;
};

export type PublishConfigPublic = {
	alert_publish_title?: string | null;
	alert_publish_body?: string | null;
	influenced_user?: boolean;
	send_mail?: boolean;
};

export type QRUri = {
	uri: string;
};

export type ServiceConfig = {
	name: string;
	sub_name: string;
	has_extra_email?: boolean;
	has_teams_slack?: boolean;
	id: string;
	alert_config: AlertConfigPublic | null;
	publish_config: PublishConfigPublic | null;
};

export type ServiceCreate = {
	name: string;
	sub_name: string;
	has_extra_email?: boolean;
	has_teams_slack?: boolean;
};

export type ServicePublic = {
	name: string;
	sub_name: string;
	has_extra_email?: boolean;
	has_teams_slack?: boolean;
	id: string;
};

export type ServicesPublic = {
	data: Array<ServicePublic>;
	count: number;
};

export type Token = {
	access_token: string;
	token_type?: string;
};

export type TOTPToken = {
	token: string;
};

export type UpdatePassword = {
	current_password: string;
	new_password: string;
};

export type UserPublic = {
	username: string;
	email: string;
	is_superuser?: boolean;
	can_edit?: boolean;
	is_active?: boolean;
	is_totp_enabled?: boolean;
	id: string;
};

export type UserRegister = {
	username: string;
	email: string;
	is_superuser?: boolean;
	can_edit?: boolean;
	is_active?: boolean;
	is_totp_enabled?: boolean;
};

export type UsersPublic = {
	data: Array<UserPublic>;
	count: number;
};

export type UserUpdate = {
	username: string;
	is_superuser?: boolean;
	can_edit?: boolean;
	is_active?: boolean;
};

export type UserUpdateServices = {
	added_services?: Array<string>;
};

export type ValidationError = {
	loc: Array<string | number>;
	msg: string;
	type: string;
};

export type LoginLoginAccessTokenData = {
	formData: Body_login___login_access_token;
};

export type LoginLoginAccessTokenResponse = Token;

export type LoginValidateTotpData = {
	requestBody: TOTPToken;
};

export type LoginValidateTotpResponse = Token;

export type LoginRefreshAccessTokenResponse = Token;

export type LoginRecoverPasswordData = {
	email: string;
};

export type LoginRecoverPasswordResponse = Message;

export type LoginResetPasswordData = {
	requestBody: NewPassword;
};

export type LoginResetPasswordResponse = Message;

export type LoginSetUpPasswordData = {
	requestBody: NewPassword;
};

export type LoginSetUpPasswordResponse = Message;

export type ServicesGetServicesData = {
	limit?: number;
	skip?: number;
};

export type ServicesGetServicesResponse = ServicesPublic;

export type ServicesCreateServiceData = {
	requestBody: ServiceCreate;
};

export type ServicesCreateServiceResponse = Message;

export type ServicesGetServiceData = {
	serviceId: string;
};

export type ServicesGetServiceResponse = ServicePublic;

export type ServicesDeleteServiceData = {
	serviceId: string;
};

export type ServicesDeleteServiceResponse = Message;

export type ServicesGetServiceUsersData = {
	serviceId: string;
};

export type ServicesGetServiceUsersResponse = Array<UserPublic>;

export type ServicesGetServiceConfigData = {
	serviceId: string;
};

export type ServicesGetServiceConfigResponse = ServiceConfig;

export type ServicesUpdateServiceConfigData = {
	requestBody: AlertConfigCreate;
	serviceId: string;
};

export type ServicesUpdateServiceConfigResponse = Message;

export type TotpEnableTotpResponse = QRUri;

export type TotpTotpLoginVerifyData = {
	requestBody: TOTPToken;
};

export type TotpTotpLoginVerifyResponse = Message;

export type TotpDisableTotpResponse = Message;

export type TotpAdminDisableTotpData = {
	userId: string;
};

export type TotpAdminDisableTotpResponse = Message;

export type UsersReadUsersData = {
	limit?: number;
	skip?: number;
};

export type UsersReadUsersResponse = UsersPublic;

export type UsersReadUserMeResponse = UserPublic;

export type UsersReadUserByIdData = {
	userId: string;
};

export type UsersReadUserByIdResponse = UserPublic;

export type UsersUpdateUserData = {
	requestBody: UserUpdate;
	userId: string;
};

export type UsersUpdateUserResponse = UserPublic;

export type UsersDeleteUserData = {
	userId: string;
};

export type UsersDeleteUserResponse = Message;

export type UsersRegisterUserData = {
	requestBody: UserRegister;
};

export type UsersRegisterUserResponse = Message;

export type UsersUpdatePasswordMeData = {
	requestBody: UpdatePassword;
};

export type UsersUpdatePasswordMeResponse = Message;

export type UsersServicesGetUserServicesData = {
	userId: string;
};

export type UsersServicesGetUserServicesResponse = Array<ServicePublic>;

export type UsersServicesAddServicesToUserData = {
	requestBody: UserUpdateServices;
	userId: string;
};

export type UsersServicesAddServicesToUserResponse = Message;

export type UtilsTestEmailData = {
	emailTo: string;
};

export type UtilsTestEmailResponse = Message;

export type UtilsHealthCheckResponse = boolean;
